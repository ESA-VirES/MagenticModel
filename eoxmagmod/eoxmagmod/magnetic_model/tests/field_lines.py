#-------------------------------------------------------------------------------
#
#  Field line tracing tests
#
# Author: Martin Paces <martin.paces@eox.at>
#
#-------------------------------------------------------------------------------
# Copyright (C) 2018 EOX IT Services GmbH
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies of this Software or works derived from this Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#-------------------------------------------------------------------------------

from unittest import TestCase, main
from numpy import array
from numpy.testing import assert_allclose
from eoxmagmod import (
    decimal_year_to_mjd2000,
    GEODETIC_ABOVE_WGS84, GEOCENTRIC_SPHERICAL, GEOCENTRIC_CARTESIAN, convert
)
from eoxmagmod.data import IGRF12
from eoxmagmod.magnetic_model.loader_shc import load_model_shc
from eoxmagmod.magnetic_model.field_lines import trace_field_line


START_POINT = (45, 30, 400)
FIELD_LINE_POINTS = [
    (-31.15906862191113, 23.528700332794713, -41.08453636212013),
    (-30.90305589261313, 23.71481502937426, 54.05217360004574),
    (-30.62954033705576, 23.892482754147363, 150.1435846975354),
    (-30.33925430035931, 24.062207570356588, 247.15987723152517),
    (-30.032846008110266, 24.224469691523833, 345.0718671081662),
    (-29.710886962331887, 24.379724032889918, 443.8504273298724),
    (-29.373879025228103, 24.52839967984339, 543.4659734799338),
    (-29.02226105714437, 24.670900016839866, 643.8880030152314),
    (-28.65641504339633, 24.80760331878583, 745.084678634508),
    (-28.276671690393698, 24.938863654290273, 847.0224468585762),
    (-27.883315501110037, 25.06501198784148, 949.6656839817774),
    (-27.47658935821729, 25.186357397370763, 1052.9763626179026),
    (-27.056698653676417, 25.303188346327797, 1156.9137330704978),
    (-26.623815008830768, 25.415773966667643, 1261.4340146749062),
    (-26.17807963092054, 25.52436532219, 1366.4900931017414),
    (-25.71960635170426, 25.629196631424556, 1472.0312203355904),
    (-25.248484392414436, 25.730486436482636, 1578.0027147327235),
    (-24.764780897180028, 25.828438709595133, 1684.345659152208),
    (-24.26854327470536, 25.923243892897872, 1790.996595742627),
    (-23.75980138564761, 26.01507986976934, 1897.8872165054554),
    (-23.238569610928973, 26.10411286794938, 2004.9440493248628),
    (-22.704848834230194, 26.19049829598214, 2112.0881397101016),
    (-22.1586283701663, 26.27438151539312, 2219.2347291167735),
    (-21.599887868133617, 26.355898551549632, 2326.2929313674713),
    (-21.02859922050274, 26.435176746458975, 2433.1654094381474),
    (-20.444728502656154, 26.51233535689734, 2539.7480556875375),
    (-19.84823797125071, 26.587486101288444, 2645.9296795430887),
    (-19.239088145924914, 26.66073365870279, 2751.591707690417),
    (-18.61723999834762, 26.732176123256526, 2856.6079029791827),
    (-17.982657270876032, 26.801905417076714, 2960.844109548911),
    (-17.335308944991695, 26.870007664883698, 3064.1580330922034),
    (-16.67517187692656, 26.936563533136503, 3166.3990666989644),
    (-16.00223361427002, 27.00164853660254, 3267.408174327987),
    (-15.316495402639237, 27.06533331515779, 3367.017845609905),
    (-14.617975385472368, 27.127683883602472, 3465.052137296302),
    (-13.906711992446096, 27.188761857293983, 3561.326818198306),
    (-13.182767502738164, 27.248624656453813, 3655.649635721429),
    (-12.44623175821986, 27.307325692095727, 3747.8207230229086),
    (-11.69722598864042, 27.36491453664288, 3837.633166148671),
    (-10.935906696060217, 27.42143708244084, 3924.8737501029805),
    (-10.162469529499615, 27.476935691516516, 4009.323901376777),
    (-9.377153063531857, 27.53144934005874, 4090.7608418518357),
    (-8.580242377179875, 27.585013761179226, 4168.958964908814),
    (-7.772072313104362, 27.637661589521283, 4243.691438916158),
    (-6.953030283121889, 27.689422511186113, 4314.732035902673),
    (-6.12355847624664, 27.740323422207943, 4381.857174214889),
    (-5.2841553215346515, 27.79038859840149, 4444.8481534881485),
    (-4.435376061829633, 27.839639878806445, 4503.49354875673),
    (-3.5778323076218146, 27.8880968641587, 4557.591718555366),
    (-2.7121904636750043, 27.93577713083808, 4606.95337028109),
    (-1.8391689550995807, 27.982696459614683, 4651.404115818891),
    (-0.9595342233684854, 28.028869077299735, 4690.786942575828),
    (-0.07409551444094656, 28.07430790818479, 4724.964520585888),
    (0.8163014624305495, 28.11902483102297, 4753.8212661362395),
    (1.710781869545818, 28.16303093637153, 4777.265086928008),
    (2.608449880467362, 28.20633677847231, 4795.228743238652),
    (3.508397391338567, 28.24895261557096, 4807.670773552244),
    (4.409713038870117, 28.290888632708825, 4814.575950756497),
    (5.3114912441661195, 28.33215514156427, 4815.955255049679),
    (6.212841002919812, 28.372762752830244, 4811.845370544573),
    (7.112894160812382, 28.412722517812607, 4802.3077326447365),
    (8.010812946203107, 28.452046037310307, 4787.427171008113),
    (8.905796577030475, 28.490745537274016, 4767.3102071510675),
    (9.797086810993635, 28.52883391211483, 4742.083075646322),
    (10.683972362988374, 28.5663247377484, 4711.88954310315),
    (11.565792167123522, 28.6032322574362, 4676.888599847142),
    (12.441937508838102, 28.639571344181945, 4637.252095922401),
    (13.311853093064002, 28.675357443844973, 4593.1623865205465),
    (14.175037145519298, 28.710606503260657, 4544.810043131121),
    (15.03104066560748, 28.745334887546306, 4492.3916765515805),
    (15.87946596145264, 28.779559290469813, 4436.107907246402),
    (16.719964601380475, 28.813296641322072, 4376.16150816121),
    (17.55223491311852, 28.846564011215456, 4312.755735528378),
    (18.37601915376085, 28.87937852117802, 4246.092854772287),
    (19.191100461728634, 28.911757253863513, 4176.372861608223),
    (19.99729968801418, 28.943717170181326, 4103.792392818834),
    (20.794472189148777, 28.975275031685715, 4028.5438169759204),
    (21.582504649548177, 29.006447329162306, 3950.814492423883),
    (22.361311986867477, 29.037250217514952, 3870.786177980428),
    (23.130834381206412, 29.06769945678656, 3788.634580862577),
    (23.891034457714834, 29.09781035893891, 3704.529026119968),
    (24.64189464246547, 29.12759773986118, 3618.6322321881707),
    (25.38341470338086, 29.157075875967276, 3531.1001778957066),
    (26.11560948143507, 29.186258464669653, 3442.082047264054),
    (26.838506812161526, 29.215158587974038, 3351.720239574066),
    (27.552145633520485, 29.243788678417864, 3260.1504334242904),
    (28.256574273241448, 29.2721604865698, 3167.501694740184),
    (28.95184890668623, 29.300285049311462, 3073.8966199139336),
    (29.638032174920628, 29.32817265813232, 2979.4515063986246),
    (30.31519195189268, 29.355832826680125, 2884.2765441609663),
    (30.983400249270975, 29.383274256819192, 2788.4760223527446),
    (31.64273224748962, 29.4105048024556, 2692.1485464591683),
    (32.29326544179026, 29.43753143038898, 2595.3872619355097),
    (32.93507889247221, 29.46436017744471, 2498.280081049178),
    (33.56825256910204, 29.490996103125514, 2400.9099102204505),
    (34.19286677904671, 29.517443236997728, 2303.3548756839214),
    (34.80900167134415, 29.54370451999282, 2205.688545719698),
    (35.416736807584535, 29.569781738759207, 2107.98014808582),
    (36.0161507921234, 29.59567545214088, 2010.2947815952652),
    (36.60732095456978, 29.62138490878783, 1912.6936210469592),
    (37.190323078076986, 29.646907954817028, 1815.234114940154),
    (37.765231167504076, 29.672240930339957, 1717.9701755818385),
    (38.33211725200557, 29.697378553553282, 1620.9523613492543),
    (38.89105121704439, 29.722313790949396, 1524.2280509872944),
    (39.44210066120323, 29.747037712042943, 1427.8416099198114),
    (39.98533077349316, 29.771539326824776, 1331.8345486277208),
    (40.520804227122, 29.795805403943277, 1236.2456732137846),
    (41.04858108588767, 29.819820267371725, 1141.1112283053544),
    (41.5687187195003, 29.843565569046188, 1046.4650325010296),
    (42.08127172420939, 29.867020034646423, 952.3386065651771),
    (42.58629184511146, 29.890159179338614, 858.761294616521),
    (43.08382789643743, 29.912954989898985, 765.7603785400311),
    (43.57392567595376, 29.93537556918465, 673.3611858744138),
    (44.056627869352795, 29.95738473840853, 581.5871914115223),
    (44.531973940136375, 29.978941592101293, 490.4601127459702),
    (45.0, 30.0, 400.0),
    (45.48063289160874, 30.02198567537289, 310.0041029915294),
    (45.953568762638746, 30.043398631176633, 220.6562190806689),
    (46.41884395594067, 30.064177802452175, 131.97690654599108),
    (46.876490840399995, 30.084254543239517, 43.98505879766927),
    (47.32653751341899, 30.103551783978066, -43.30201467905669),
]


class TestFieldLineTracing(TestCase):
    time = decimal_year_to_mjd2000(2015.5)
    point = START_POINT
    points = FIELD_LINE_POINTS

    @property
    def model(self):
        if not hasattr(self, "_model"):
            self._model = load_model_shc(IGRF12)
        return self._model

    def test_trace_field_line_wgs84(self):
        point = self.point
        points, vectors = trace_field_line(
            self.model, self.time, point,
            input_coordinate_system=GEODETIC_ABOVE_WGS84,
            output_coordinate_system=GEODETIC_ABOVE_WGS84,
        )
        assert_allclose(points, self.points)
        assert_allclose(vectors, self.model.eval(
            self.time, points,
            input_coordinate_system=GEODETIC_ABOVE_WGS84,
            output_coordinate_system=GEODETIC_ABOVE_WGS84,
        ))

    def test_trace_field_line_spherical(self):
        point = convert(self.point, GEODETIC_ABOVE_WGS84, GEOCENTRIC_SPHERICAL)
        points, vectors = trace_field_line(
            self.model, self.time, point,
            input_coordinate_system=GEOCENTRIC_SPHERICAL,
            output_coordinate_system=GEOCENTRIC_SPHERICAL,
        )
        assert_allclose(points, convert(
            self.points, GEODETIC_ABOVE_WGS84, GEOCENTRIC_SPHERICAL
        ))
        assert_allclose(vectors, self.model.eval(
            self.time, points,
            input_coordinate_system=GEOCENTRIC_SPHERICAL,
            output_coordinate_system=GEOCENTRIC_SPHERICAL,
        ))

    def test_trace_field_line_cartesian(self):
        point = convert(self.point, GEODETIC_ABOVE_WGS84, GEOCENTRIC_CARTESIAN)
        points, vectors = trace_field_line(
            self.model, self.time, point,
            input_coordinate_system=GEOCENTRIC_CARTESIAN,
            output_coordinate_system=GEOCENTRIC_CARTESIAN,
        )
        assert_allclose(points, convert(
            self.points, GEODETIC_ABOVE_WGS84, GEOCENTRIC_CARTESIAN
        ))
        assert_allclose(vectors, self.model.eval(
            self.time, points,
            input_coordinate_system=GEOCENTRIC_CARTESIAN,
            output_coordinate_system=GEOCENTRIC_CARTESIAN,
        ))


if __name__ == "__main__":
    main()
