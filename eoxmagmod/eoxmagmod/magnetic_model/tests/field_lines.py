#-------------------------------------------------------------------------------
#
#  Field line tracing tests
#
# Author: Martin Paces <martin.paces@eox.at>
#
#-------------------------------------------------------------------------------
# Copyright (C) 2018 EOX IT Services GmbH
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies of this Software or works derived from this Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#-------------------------------------------------------------------------------

from unittest import TestCase, main
from numpy import array
from numpy.testing import assert_allclose
from eoxmagmod import (
    decimal_year_to_mjd2000,
    GEODETIC_ABOVE_WGS84, GEOCENTRIC_SPHERICAL, GEOCENTRIC_CARTESIAN, convert
)
from eoxmagmod.data import IGRF12
from eoxmagmod.magnetic_model.loader_shc import load_model_shc
from eoxmagmod.magnetic_model.field_lines import trace_field_line


START_POINT = (45, 30, 400)
FIELD_LINE_POINTS = [
    (-35.368275018743304, 39.70032696580139, -95.92016196680392),
    (-35.01448793085976, 39.389389777119, -8.345029685897572),
    (-34.65414356716643, 39.09146494180264, 80.46488993920943),
    (-34.28714906319121, 38.80573533292339, 170.48240408617966),
    (-33.91340510534023, 38.53143005373151, 261.68080219042946),
    (-33.532807242464465, 38.26782494112031, 354.0336815233639),
    (-33.14524690535559, 38.01424204903991, 447.5147505061568),
    (-32.750612180499786, 37.770048392287215, 542.0976179371415),
    (-32.348788381019766, 37.53465417728777, 637.7555738486157),
    (-31.93965845325654, 37.307510698839394, 734.4613657823612),
    (-31.523103252594346, 37.08810804114377, 832.1869728097033),
    (-31.099001717375284, 36.875972687756764, 930.9033785278496),
    (-30.667230965353536, 36.670665117787465, 1030.5803434847023),
    (-30.227666333245253, 36.471777443981416, 1131.186176921251),
    (-29.780181376590207, 36.278931131377036, 1232.6875073425635),
    (-29.324647844356377, 36.091774822199675, 1335.049051181911),
    (-28.86093564045565, 35.90998228280409, 1438.2333786690403),
    (-28.388912782551504, 35.73325048114799, 1542.200675937438),
    (-27.908445367174725, 35.56129779793246, 1646.9085023808505),
    (-27.419397549169194, 35.393862370732705, 1752.3115422834514),
    (-26.921631542818275, 35.23070056780717, 1858.361349808729),
    (-26.415007651611294, 35.0715855865265, 1965.006086496987),
    (-25.899384333461576, 34.91630617028395, 2072.1902505403573),
    (-25.374618308252128, 34.764665437158285, 2179.854397237278),
    (-24.840564714835757, 34.61647981336713, 2287.934850185092),
    (-24.297077325030767, 34.471578064567275, 2396.3634029845716),
    (-23.744008822710942, 34.32980041825184, 2505.067011460707),
    (-23.18121115677119, 34.190997770802554, 2613.9674767018873),
    (-22.608535977537386, 34.05503097313367, 2722.9811195713573),
    (-22.025835167059867, 33.92177018927914, 2832.018447754809),
    (-21.43296147465825, 33.79109432270073, 2940.983816919088),
    (-20.829769270038497, 33.66289050551211, 3049.775088136256),
    (-20.21611542724024, 33.537053646208186, 3158.2832844398645),
    (-19.59186035354027, 33.413486031847, 3266.3922501829825),
    (-18.95686917816916, 33.29209698094294, 3373.9783178327793),
    (-18.311013116205977, 33.17280254358629, 3480.909987930112),
    (-17.654171023194177, 33.0555252454949, 3587.047629189493),
    (-16.986231155738174, 32.94019387282155, 3692.2432071369744),
    (-16.307093152436064, 32.826743294575984, 3796.340051232376),
    (-15.616670247792243, 32.715114319464526, 3899.1726721540285),
    (-14.914891729020797, 32.60525358379599, 4000.5666427220244),
    (-14.201705641657535, 32.49711346684126, 4100.338557845312),
    (-13.477081744393795, 32.39065202966322, 4198.296090756966),
    (-12.741014706274601, 32.285832972951106, 4294.238164583293),
    (-11.99352753013725, 32.18262560880544, 4387.955259851252),
    (-11.234675174725473, 32.08100484073894, 4479.229879672146),
    (-10.46454833421796, 31.980951145410543, 4567.837194861094),
    (-9.683277318022482, 31.88245054883062, 4653.545890918174),
    (-8.891035955881224, 31.785494589020853, 4736.119237312047),
    (-8.08804543415135, 31.690080256452703, 4815.316396595091),
    (-7.274577949437963, 31.596209903113017, 4890.893986282448),
    (-6.450960046804742, 31.503891110858422, 4962.607899893589),
    (-5.617575493187495, 31.41313650993444, 5030.215384965204),
    (-4.774867524339252, 31.323963539263378, 5093.477365244751),
    (-3.923340297818199, 31.236394141444755, 5152.160981814694),
    (-3.063559387401171, 31.15045438743043, 5206.042314126412),
    (-2.196151167840998, 31.06617402854731, 5254.909227500265),
    (-1.321800964495905, 30.98358597689093, 5298.564279616575),
    (-0.4412498805363394, 30.90272571896521, 5336.827606080752),
    (0.4447097355608171, 30.8236306715743, 5369.53969562796),
    (1.335240159864846, 30.746339493079482, 5396.56396022559),
    (2.229465412150166, 30.670891366862644, 5417.78900533984),
    (3.126479469500271, 30.59732527681642, 5433.130511624677),
    (4.025355357177023, 30.525679296571806, 5442.532651436818),
    (4.925154847519681, 30.455989914723023, 5445.96898133403),
    (5.824938460943497, 30.388291417389315, 5443.442773980031),
    (6.723775445477642, 30.32261534709058, 5434.986777926378),
    (7.620753414465902, 30.258990053293356, 5420.662419581578),
    (8.514987345585935, 30.197440345423743, 5400.558486165178),
    (9.40562768563125, 30.13798725405647, 5374.789349689351),
    (10.291867360241891, 30.08064790082019, 5343.492808471239),
    (11.17294755060474, 30.02543547273187, 5306.827633459373),
    (12.048162164409726, 29.972359292536087, 5264.970911452601),
    (12.916860990794989, 29.921424973421466, 5218.115276387669),
    (13.778451584363722, 29.872634644335406, 5166.46611413995),
    (14.632399968638499, 29.82598723102486, 5110.238816722657),
    (15.478230282969996, 29.781478777803493, 5049.656149733073),
    (16.31552351867314, 29.739102795723987, 4984.9457835838775),
    (17.14391550081574, 29.698850624123775, 4916.338025521859),
    (17.96309427316046, 29.66071179420744, 4844.0637766518685),
    (18.772797037199222, 29.624674385239864, 4768.352726671692),
    (19.572806784084342, 29.5907253658877, 4689.431789258143),
    (20.362948742519432, 29.55885091513693, 4607.5237731160505),
    (21.143086748050635, 29.52903671894139, 4522.846277669796),
    (21.913119621097188, 29.501268240267294, 4435.610798063375),
    (22.672977623538486, 29.47553096146511, 4346.022021359402),
    (23.422619047465396, 29.45181059892098, 4254.2772943461805),
    (24.162026975254744, 29.430093290726738, 4160.566242893925),
    (24.891206237654814, 29.41036575868512, 4065.070523137479),
    (25.610180586120272, 29.392615446362054, 3967.9636856633424),
    (26.318990087125353, 29.376830635142777, 3869.411135156902),
    (27.017688739456098, 29.363000540371537, 3769.570169489284),
    (27.706342310330736, 29.351115389683304, 3668.590083849468),
    (28.385026382401737, 29.34116648559415, 3566.612327168222),
    (29.053824601031675, 29.33314625432488, 3463.770699699266),
    (29.712827109501294, 29.32704828270639, 3360.1915821331886),
    (30.36212915881401, 29.322867344868495, 3255.9941880239903),
    (31.001829878343475, 29.32059942025649, 3151.2908325832454),
    (31.632031193589107, 29.320241704358956, 3046.1872120331786),
    (32.252836877644775, 29.321792613371517, 2940.7826887155543),
    (32.86435172355159, 29.325251783868268, 2835.1705780272214),
    (33.466680825422905, 29.330620068407004, 2729.438434010455),
    (34.05992895703882, 29.33789952785791, 2623.6683310760322),
    (34.644200037463555, 29.34709342111756, 2517.9371398821386),
    (35.21959667410733, 29.35820619275122, 2412.3167958629224),
    (35.78621977451189, 29.37124345899474, 2306.8745592795553),
    (36.34416821896612, 29.386211992442647, 2201.673265990728),
    (36.89353858684493, 29.40311970564834, 2096.7715684103264),
    (37.43442493030391, 29.42197563376524, 1992.2241663215752),
    (37.96691858964843, 29.442789916260928, 1888.082027404775),
    (38.49110804533003, 29.465573777638248, 1784.392597464174),
    (39.007078802102974, 29.49033950699456, 1681.2000004586284),
    (39.51491330140361, 29.51710043614099, 1578.545228515145),
    (40.014690858494674, 29.54587091588245, 1476.4663221804403),
    (40.50648762135161, 29.57666628992412, 1374.9985412003298),
    (40.99037654865758, 29.609502865715164, 1274.1745261684782),
    (41.46642740462557, 29.64439788136029, 1174.024451385388),
    (41.93470676867807, 29.68136946751824, 1074.576169305591),
    (42.395278058293414, 29.72043660295491, 975.8553469376758),
    (42.848201563572346, 29.761619062117706, 877.8855945714239),
    (43.293534492291684, 29.804937352735983, 780.6885871994914),
    (43.73133102439392, 29.850412641014557, 684.284178986051),
    (44.16164237501215, 29.898066661456202, 588.6905111308354),
    (44.58451686524759, 29.947921607703226, 493.92411345224093),
    (45.0, 30.0, 400.0),
    (45.42710009803878, 30.05432746263268, 306.4446328581874),
    (45.84643921099552, 30.11103204224734, 213.7189888926893),
    (46.25806390504777, 30.170140717715288, 121.83825484074242),
    (46.6620180782485, 30.23168038304484, 30.816154660438396),
    (47.05834305130048, 30.295677548429694, -59.334964224643834),
]


class TestFieldLineTracing(TestCase):
    time = decimal_year_to_mjd2000(2015.5)
    point = START_POINT
    points = FIELD_LINE_POINTS

    @property
    def model(self):
        if not hasattr(self, "_model"):
            self._model = load_model_shc(IGRF12)
        return self._model

    def test_trace_field_line_wgs84(self):
        point = self.point
        points, vectors = trace_field_line(
            self.model, self.time, point,
            input_coordinate_system=GEODETIC_ABOVE_WGS84,
            output_coordinate_system=GEODETIC_ABOVE_WGS84,
        )
        assert_allclose(points, self.points)
        assert_allclose(vectors, self.model.eval(
            self.time, points,
            input_coordinate_system=GEODETIC_ABOVE_WGS84,
            output_coordinate_system=GEODETIC_ABOVE_WGS84,
        ))

    def test_trace_field_line_spherical(self):
        point = convert(self.point, GEODETIC_ABOVE_WGS84, GEOCENTRIC_SPHERICAL)
        points, vectors = trace_field_line(
            self.model, self.time, point,
            input_coordinate_system=GEOCENTRIC_SPHERICAL,
            output_coordinate_system=GEOCENTRIC_SPHERICAL,
        )
        assert_allclose(points, convert(
            self.points, GEODETIC_ABOVE_WGS84, GEOCENTRIC_SPHERICAL
        ))
        assert_allclose(vectors, self.model.eval(
            self.time, points,
            input_coordinate_system=GEOCENTRIC_SPHERICAL,
            output_coordinate_system=GEOCENTRIC_SPHERICAL,
        ))

    def test_trace_field_line_cartesian(self):
        point = convert(self.point, GEODETIC_ABOVE_WGS84, GEOCENTRIC_CARTESIAN)
        points, vectors = trace_field_line(
            self.model, self.time, point,
            input_coordinate_system=GEOCENTRIC_CARTESIAN,
            output_coordinate_system=GEOCENTRIC_CARTESIAN,
        )
        assert_allclose(points, convert(
            self.points, GEODETIC_ABOVE_WGS84, GEOCENTRIC_CARTESIAN
        ))
        assert_allclose(vectors, self.model.eval(
            self.time, points,
            input_coordinate_system=GEOCENTRIC_CARTESIAN,
            output_coordinate_system=GEOCENTRIC_CARTESIAN,
        ))


if __name__ == "__main__":
    main()
